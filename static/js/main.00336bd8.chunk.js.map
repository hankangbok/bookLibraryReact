{"version":3,"sources":["index.js"],"names":["AddNewBookForm","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","React","Component","RemoveBookFromLibrary","props","_this","Object","_mnt_c_Users_Hannah_Documents_Projects_book_library_react_ver_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_mnt_c_Users_Hannah_Documents_Projects_book_library_react_ver_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_mnt_c_Users_Hannah_Documents_Projects_book_library_react_ver_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleClick","bind","_mnt_c_Users_Hannah_Documents_Projects_book_library_react_ver_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","onClick","ReadToggle","_this2","state","isReadorNot","thisBook","isRead","newReadStatus","setState","toString","SingleBook","aBook","title","author","numPages","genre","className","LibraryContainer","rows","books","forEach","bookinlist","push","key","id","Library","booksList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00336bd8.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// Hierarchy\n// rows within individual books\n// individual book object\n// library display\n// book form class\n// Library Class\n\n\n// dont touch this for now. \n// I'll set up form entry once the library display is good.\nclass AddNewBookForm extends React.Component {\n  render() {\n    return <button> Add a New Book to the Library!</button>;\n  }\n}\n\n\n// this component displays the 'remove book' button\nclass RemoveBookFromLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n\n  }\n  render() {\n    return <button onClick={this.handleClick}>Remove Book from Library</button>;\n  }\n}\n// TODO: define function to remove book from\n\n// this component displays the 'read' toggle button\nclass ReadToggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isReadorNot: this.props.thisBook.isRead,\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    let newReadStatus = (this.state.isReadorNot === true) ? false : true;\n    this.setState({ isReadorNot: newReadStatus });\n  }\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        {this.state.isReadorNot.toString()}\n      </button>\n    );\n  }\n}\n// TODO: define function to toggle Read state\n\n\nclass SingleBook extends React.Component {\n  // I might not even need this constructor \n  // it was meant to get the read status of the books but its kind of unnecessary/\n  // constructor(props) {\n  //   super(props);\n  //   this.state={\n  //     readStatus:false,\n  //   };\n  // }\n  render() {\n    const aBook = this.props.aBook;\n    const title = aBook.title;\n    const author = aBook.author;\n    const numPages = aBook.numPages;\n    const genre = aBook.genre;\n    return (\n      <div className=\"bookContainer\">\n        <h1>Title: {title}</h1>\n        <h1>Author: {author}</h1>\n        <h1>Pages: {numPages}</h1>\n        <h1>Genre: {genre}</h1>\n        {/* <h3>this book has been read? {this.state.readStatus.toString()}</h3> */}\n        <ReadToggle thisBook={aBook} />\n        <br></br>\n        <RemoveBookFromLibrary />\n      </div>\n    );\n\n  }\n}\n\nclass LibraryContainer extends React.Component {\n  render() {\n    const rows = [];\n    let lastBook = null;\n\n    this.props.books.forEach((bookinlist) => {\n      rows.push(\n        <SingleBook\n          aBook={bookinlist}\n          title={bookinlist.title}\n          key={bookinlist.title} />\n      );\n\n    });\n\n    return (\n      <div id=\"librarycontainer2\">{rows}</div>\n    );\n  }\n}\n\nclass Library extends React.Component {\n  render() {\n    return (\n      <div>\n        <AddNewBookForm />\n        <LibraryContainer books={this.props.booksList} />\n        <AddNewBookForm />\n      </div>\n    );\n  }\n}\n\n// This is a list of 'book' objects \n// This version of the library project does not have backend data\nconst BOOKSLIST = [\n  { title: 'book1', author: 'autho1 ', numPages: '1235', isRead: false, genre: 'scifi' },\n  { title: 'book2', author: 'autho2 ', numPages: '1235', isRead: false, genre: 'scifi' },\n  { title: 'book3', author: 'autho3 ', numPages: '1235', isRead: false, genre: 'autoBio' },\n  { title: 'book4', author: 'autho4 ', numPages: '1235', isRead: true, genre: 'scifi' },\n  { title: 'book5', author: 'autho5 ', numPages: '1235', isRead: false, genre: 'scifi' },\n  { title: 'book6', author: 'autho6 ', numPages: '1235', isRead: false, genre: 'scifi' },\n  { title: 'book7', author: 'autho8 ', numPages: '1235', isRead: false, genre: 'scifi' }\n];\n\n\nReactDOM.render(\n  <Library booksList={BOOKSLIST} />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}