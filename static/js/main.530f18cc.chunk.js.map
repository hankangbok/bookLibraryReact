{"version":3,"sources":["newBookForm.js","index.js"],"names":["NewBookFormEntry","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isVisible","handleFormClick","bind","assertThisInitialized","inherits","createClass","key","value","_this2","console","log","setState","react_default","a","createElement","id","for","name","required","type","onClick","React","Component","AddNewBookForm","newBookForm_NewBookFormEntry","ReadToggle","isReadorNot","thisBook","isRead","handleClick","newReadStatus","isReadButton","RemoveBookFromLibrary","title","SingleBook","aBook","author","numPages","genre","className","src_ReadToggle","src_RemoveBookFromLibrary","LibraryContainer","allBooks","handleRemoveClick","e","theTitle","currentTarget","allBooks1","index","findIndex","eachBook","splice","_this3","rows","forEach","bookinlist","push","src_SingleBook","Library","src_AddNewBookForm","src_LibraryContainer","books","booksList","ReactDOM","render","src_Library","document","getElementById"],"mappings":"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","file":"static/js/main.530f18cc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class NewBookFormEntry extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isVisible:false,\r\n    }\r\n    this.handleFormClick = this.handleFormClick.bind(this);\r\n  }\r\n\r\n  handleFormClick() {\r\n    console.log(\"something was clicked\");\r\n    console.log(this.state.isVisible);\r\n    this.setState=( {isVisible: true}, () => {\r\n      console.log(this.state.isVisible);\r\n    });   \r\n  }\r\n  render() {\r\n    if (this.state.isVisible) {\r\n      return (\r\n        <form id=\"addBookForm\">\r\n          <p>\r\n            <label for=\"title\"> What is the title of the book?</label>\r\n            <input id=\"title\" name=\"booktile\" required />\r\n          </p>\r\n          <p>\r\n            <label for=\"author\"> Who is the author of the book?</label>\r\n            <input id=\"authorname\" name=\"authorname\" required />\r\n          </p>\r\n          <p>\r\n            <label for=\"pages\"> How many pages does the book have?</label>\r\n            <input id=\"pages\" name=\"pages\" required />\r\n          </p>\r\n          <p>\r\n            <label for=\"genre\">What genre is the book?</label>\r\n            <input id=\"genre\" name=\"genre\" required />\r\n          </p>\r\n          <p>\r\n            Have you finished this book?\r\n            <label for=\"haveRead\"> Yes</label>\r\n            <input type=\"radio\" name=\"haveRead\" />\r\n            <label for=\"haventRead\">Nope</label>\r\n            <input type=\"radio\" name=\"haveRead\" />\r\n          </p>\r\n          <button>Submit</button>\r\n        </form>\r\n\r\n      );\r\n    } else {\r\n      console.log(\"This is the current state\" +this.state.isVisible);\r\n      return (\r\n        <button id=\"addBookForm\" onClick={this.handleFormClick}> Add a New Book~~!</button>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n// function addBooktoLibrary() {\r\n//   var newBook=[ \r\n//     title: 'book1', \r\n//     author: 'autho1 ', \r\n//     numPages: '1235', \r\n//     isRead: false, \r\n//     genre: 'scifi' }\r\n//   ];","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {NewBookFormEntry} from './newBookForm'\r\n\r\n// dont touch this for now. \r\n// I'll set up form entry once the library display is good.\r\n// class AddNewBookForm extends React.Component {\r\n//   render() {\r\n//     // return <NewBookFormEntry />\r\n//     return (\r\n//       <button> Add a New Book to the Library!</button>\r\n//     );\r\n//   }\r\n// }\r\n\r\nclass AddNewBookForm extends React.Component {\r\n  render() {\r\n    return <NewBookFormEntry />;\r\n  }\r\n}\r\n\r\n// this component displays the 'read' toggle button\r\nclass ReadToggle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isReadorNot: this.props.thisBook.isRead,\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  \r\n  handleClick() {\r\n    let newReadStatus = (this.state.isReadorNot === true) ? false : true;\r\n    this.setState({ isReadorNot: newReadStatus });\r\n  }\r\n  render() {\r\n    let isReadButton;\r\n    if (this.state.isReadorNot===true) {\r\n      isReadButton = \"Finished!\";\r\n    } else {\r\n      isReadButton = \"Working on It\";\r\n    }\r\n    return (\r\n      <h3>Have you finished the book?\r\n        <button onClick={this.handleClick}>\r\n          {/* {this.state.isReadorNot.toString()} */}\r\n          {isReadButton}\r\n        </button>\r\n      </h3>\r\n    );\r\n  }\r\n}\r\n\r\nclass RemoveBookFromLibrary extends React.Component {\r\n  render() {\r\n    return <button title={this.props.title} onClick={this.props.onClick}>Remove this Book from Library</button>;\r\n  }\r\n}\r\n\r\nclass SingleBook extends React.Component {\r\n\r\n  render() {\r\n    const aBook = this.props.aBook;\r\n    const title = aBook.title;\r\n    const author = aBook.author;\r\n    const numPages = aBook.numPages;\r\n    const genre = aBook.genre;\r\n    return (\r\n      <div className=\"bookContainer\">\r\n        <h1>Title: {title}</h1>\r\n        <h2>Author: {author}</h2>\r\n        <h2>Pages: {numPages}</h2>\r\n        <h2>Genre: {genre}</h2>\r\n        <ReadToggle thisBook={aBook} />\r\n        <br></br>\r\n        <RemoveBookFromLibrary title={title} onClick={this.props.onClick} />\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nclass LibraryContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      allBooks:  [\r\n        { title: 'Lord of the Rings: Fellowship of the Ring', author: 'JRR Tolkien ', numPages: '1235', isRead: true, genre: 'Fantasy' },\r\n        { title: 'Lord of the Rings: The Two Towers', author: 'JRR Tolkien ', numPages: '1235', isRead: false, genre: 'Fantasy' },\r\n        { title: 'Lord of the Rings: Return of the King', author: 'JRR Tolkien ', numPages: '1235', isRead: false, genre: 'Fantasy' },\r\n        { title: 'Game of Thrones', author: 'George R R Martin ', numPages: '1235', isRead: true, genre: 'Fantasy' },\r\n        { title: 'Cell ', author: 'Stephen King ', numPages: '1235', isRead: false, genre: 'horror' },\r\n        { title: 'Design It Yourself', author: 'Ellen Lipton', numPages: '1235', isRead: false, genre: 'DIY' },\r\n        { title: 'Fullmetal Alchemist', author: 'Hiromu Arakawa', numPages: '1235', isRead: false, genre: 'manga' }\r\n      ]\r\n    }\r\n    this.handleRemoveClick=this.handleRemoveClick.bind(this);\r\n  }\r\n  \r\n  // Even handler for removing books\r\n  handleRemoveClick(e){ \r\n    const theTitle = e.currentTarget.title;\r\n    console.log(\"this is the book to remove\" + theTitle);\r\n\r\n    const allBooks1 = this.state.allBooks;\r\n    const index = allBooks1.findIndex(eachBook => eachBook.title === theTitle);\r\n    allBooks1.splice(index,1);\r\n    this.setState({allBooks: allBooks1});\r\n  }\r\n\r\n  \r\n  render() {\r\n    const rows = [];\r\n    this.state.allBooks.forEach((bookinlist) => {\r\n      rows.push(\r\n        <SingleBook\r\n          aBook={bookinlist}\r\n          title={bookinlist.title}\r\n          key={bookinlist.title}\r\n          onClick={this.handleRemoveClick} />\r\n      );\r\n\r\n    });\r\n\r\n    return (\r\n      <div id=\"librarycontainer2\">{rows}</div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Library extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NewBookFormEntry onClick={this.props.handleFormClick} />\r\n        <AddNewBookForm />\r\n        <LibraryContainer books={this.props.booksList} />\r\n        <AddNewBookForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// This is a list of 'book' objects \r\n// This version of the library project does not have backend data\r\n// const BOOKSLIST = [\r\n//   { title: 'book1', author: 'autho1 ', numPages: '1235', isRead: false, genre: 'scifi' },\r\n//   { title: 'book2', author: 'autho2 ', numPages: '1235', isRead: false, genre: 'scifi' },\r\n//   { title: 'book3', author: 'autho3 ', numPages: '1235', isRead: false, genre: 'autoBio' },\r\n//   { title: 'book4', author: 'autho4 ', numPages: '1235', isRead: true, genre: 'scifi' },\r\n//   { title: 'book5', author: 'autho5 ', numPages: '1235', isRead: false, genre: 'scifi' },\r\n//   { title: 'book6', author: 'autho6 ', numPages: '1235', isRead: false, genre: 'scifi' },\r\n//   { title: 'book7', author: 'autho8 ', numPages: '1235', isRead: false, genre: 'scifi' }\r\n// ];\r\n\r\n\r\nReactDOM.render(\r\n  <Library />,\r\n  // <Library booksList={BOOKSLIST} />,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}